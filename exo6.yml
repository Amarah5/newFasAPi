openapi: 3.0.3
info:
  title: User Profile API â€” Targeted Updates
  description: API for managing user profiles with targeted updates
  version: 1.0.0
components:
  parameters:
    UserId:
      in: path
      name: id
      required: true
      schema:
        type: string
      description: User identifier
  schemas:
    PersonalInfo:
      type: object
      required: [first_name, last_name, birthdate, email]
      properties:
        first_name: { type: string, example: "Mahery" }
        last_name:  { type: string, example: "Rakoto" }
        birthdate:  { type: string, format: date, example: "2000-01-15" }
        email:      { type: string, format: email, example: "mahery@example.com" }
    Address:
      type: object
      required: [address_street, address_city, address_country, address_postal_code]
      properties:
        address_street: { type: string, example: "Rue Andrianampoinimerina" }
        address_city:   { type: string, example: "Antananarivo" }
        address_country:{ type: string, example: "MG" }
        address_postal_code: { type: string, example: "101" }
    Preferences:
      type: object
      required: [needs_newsletter, language]
      properties:
        needs_newsletter: { type: boolean, example: true }
        language:
          type: string
          enum: [mg, fr, eng]
          example: fr
    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
    UserProfile:
      allOf:
        - type: object
          required: [identifier]
          properties:
            identifier: { type: string, example: "USR-001" }
        - $ref: '#/components/schemas/CreateUserProfile'
paths:
  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get full user profile
      responses:
        '200':
          description: Full user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              example:
                identifier: "USR-001"
                first_name: "Mahery"
                last_name: "Rakoto"
                birthdate: "2000-01-15"
                email: "mahery@example.com"
                address_street: "Rue Andrianampoinimerina"
                address_city: "Antananarivo"
                address_country: "MG"
                address_postal_code: "101"
                needs_newsletter: true
                language: "fr"
  /users:
    post:
      summary: Create a list of users (server generates identifiers)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            example:
              - first_name: "Aina"
                last_name: "R."
                birthdate: "1999-04-20"
                email: "aina@example.com"
                address_street: "Lot II"
                address_city: "Tana"
                address_country: "MG"
                address_postal_code: "101"
                needs_newsletter: false
                language: "mg"
      responses:
        '201':
          description: Created users with generated identifiers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
  /users/{id}/personalInfo:
    parameters:
      - $ref: '#/components/parameters/UserId'
    put:
      summary: Update only personal information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/address:
    parameters:
      - $ref: '#/components/parameters/UserId'
    put:
      summary: Update only address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/preferences:
    parameters:
      - $ref: '#/components/parameters/UserId'
    put:
      summary: Update only preferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
